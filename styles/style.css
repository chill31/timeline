@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');

:root {
  
  /* TIMELINE */
  --overlay: #363c4b;
  --gray: #dcf4ff;
  --muted: #dddddd43;
  --gap-from-line: 4rem;
  --line-dimension: 1px;
  --signal-dimension: 1rem;
  --box-padding: var(--gap-from-line);

  /* PAGE */
  --font: Inter, sans-serif;
  --background: #2b3241;
  --links: #37c1ff;
  --color: #ffffff;
  --outline: #ffffff;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: var(--background);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding-block: 4rem;
  gap: 8rem;
  font-family: var(--font);
  overflow-x: hidden;
}

input, button, textarea {
  font-family: var(--font);
}

h1,
h2,
h3 {
  font-weight: 700;
}

h1,
p,
span,
div {
  color: var(--color);
}

p,
span,
div,
a {
  font-weight: 400;
}

a {
  color: var(--links);
  text-decoration: none;
}

button {
  font-size: 1rem;
  font-family: var(--font);
  background-color: var(--overlay);
  padding: .75rem 1.5rem;
  color: var(--color);
  border-radius: .25rem;
  border: solid 1px var(--muted);
  cursor: pointer;
  transition-duration: 300ms;
  transition-property: background-color, color;
}

button:focus {
  outline: solid 2px var(--outline);
  outline-offset: 2px;
}

button:hover {
  background-color: var(--muted);
}

input[type='text'] {
  background-color: #363c4b;
  padding: .1rem .2rem;
  font-size: 1rem;
  border: solid 1px var(--overlay);
  border-radius: .2rem;
  color: white;
}

input[type='text']:focus {
  outline: solid 2px var(--outline);
  outline-offset: 2px;
}

code {
  padding: .2rem;
  border: solid 1px var(--muted);
  border-radius: .4rem;
  background-color: var(--overlay);
  color: var(--color);
  font-size: 1rem;
}

a:focus {
  outline: solid 1px var(--outline);
  outline-offset: 2px;
}

header {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: .5rem;
}

.title {
  font-size: 4rem;
}

.user {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  padding: 1.25rem;
  padding-block: .5rem;
  border-radius: .5rem;
  background-color: var(--overlay);
  margin-bottom: 2rem;
  gap: .5rem;
}

.user img {
  width: 2.8rem;
  aspect-ratio: 1;
  border-radius: 50%;
}

.main-description {
  font-size: 1.1rem;
  color: var(--gray);
  text-align: center;
  margin-inline: 2rem;
  line-height: 1.5;
}

@media (max-width: 640px) {
  .main-description {
    margin-inline: 1rem;
  }
}

.change-styles-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  width: 60rem;
  max-width: 100vw;
}

.styles-wrapper {
  padding: 1.5rem;
  background-color: var(--overlay);
  width: calc(100% - 2rem);
  border-radius: .5rem;
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.styles-wrapper.active {
  display: flex;
}

.style {
  width: 100%;
  background-color: var(--muted);
  padding: .5rem;
  border-radius: .25rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.style .input-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1ch;
}

.style input[type='text'] {
  width: 4rem;
}

.input-container .unit {
  width: 2rem;
}

.button-flex {
  margin-top: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: .7rem;
  align-self: flex-end;
}

.select-mode-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.select-mode {
  padding: .5rem 1.5rem;
  border-radius: 10329430px;
  cursor: pointer;
  background-color: var(--muted);
  transition: 300ms ease;
  transition-property: background-color, filter, color;
}

.select-mode.selected {
  background-color: var(--links);
  color: black;
}

.select-mode:hover {
  filter: brightness(.9);
}

/** timeline code. THIS IS THE CODE YOU WILL WANT TO TAKE IF YOU ARE USING THIS TIMELINE TEMPLATE */
/** GO TO /src/styles.css instead of taking code from here */
.container {
  display: flex;
  gap: var(--box-padding);
  position: relative;
}

.container.vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  padding-block: var(--box-padding);
  width: calc(100vw - 12rem);
  min-height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
}

.container.horizontal {
  width: calc(100vw - var(--box-padding));
  height: 100vh;
  max-height: 25rem;
  padding: 2rem;
  padding-top: calc(var(--box-padding) + .5rem + calc(var(--line-dimension) * 1.5));
  /* for the signals to appear */
  overflow-x: scroll;
  align-items: flex-start;
  justify-content: flex-start;
}

.container .line {
  background-color: var(--gray);
  position: absolute;
}

.container.vertical .line {
  width: var(--line-dimension);
  height: 100%;
  left: 50%;
  top: 0;
  transform: translate(-50%);
}

.container.horizontal .line {
  display: none;
}

.container.vertical .line::before,
.container.vertical .line::after {
  content: '';
  position: absolute;
  width: var(--signal-dimension);
  height: var(--signal-dimension);
  background-color: var(--gray);
  border-radius: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  top: 0;
}

.container.vertical .line::after {
  top: unset;
  bottom: calc(-1 * var(--signal-dimension));
}

.card {
  background-color: var(--overlay);
  padding: 1.5rem;
  border-radius: .5rem;
  position: relative;
  opacity: 0;
  pointer-events: none;
  transition: 300ms ease-in-out;
  transition-property: opacity, transform;
}

.container.vertical .card {
  width: calc(50% - var(--box-padding));
  transform: translateX(-20%);
}

.container.vertical .card:nth-of-type(2n) {
  transform: translateX(20%);
}

.container.horizontal .card {
  height: 95%;
  min-width: 25rem !important;
  transform: translateY(-10%);
}

/*
for the reverse animation: */
/*
.container.vertical .card {
  transform: translateX(20%);
}

.container.vertical .card:nth-of-type(2n) {
  transform: translateX(-20%);
}

.container.horizontal .card {
  transform: translateY(10%);
}

*/

.card.active {
  opacity: 1;
  pointer-events: all;
  transform: unset !important;
}

.container.vertical .card:nth-of-type(2n) {
  align-self: flex-end;
}

.card .signal {
  height: var(--signal-dimension);
  width: var(--signal-dimension);
  background-color: var(--gray);
  border-radius: 50%;
  position: absolute;
  animation: pulse 1250ms infinite;
}

.container.vertical .card .signal {
  top: 0;
  right: calc(-1 * calc(var(--gap-from-line) + calc(var(--signal-dimension) / 2)));
}

.container.vertical .card:nth-child(2n+1) .signal {
  left: calc(-1 * calc(var(--gap-from-line) + calc(var(--signal-dimension) / 2)));
  right: unset;
}

.container.horizontal .card .signal {
  top: calc(-1 * var(--gap-from-line));
  left: 0rem;
}

.container.horizontal .card::before {
  content: '';
  top: calc(-1 * var(--gap-from-line));
  width: calc(100% + var(--box-padding));
  height: var(--line-dimension);
  position: absolute;
  left: 0;
  transform: translateY(calc(var(--signal-dimension) / 2));
  background-color: var(--gray);
}

.container.horizontal .card:nth-last-of-type(1)::after {
  content: '';
  width: var(--signal-dimension);
  height: var(--signal-dimension);
  position: absolute;
  right: calc(-1 * var(--gap-from-line));
  top: calc(-1 * calc(var(--box-padding) + .5rem));
  border-radius: 50%;
  transform: translateY(.5rem);
  background-color: var(--gray);
}

@media (max-width: 900px) {

  .container.vertical {
    width: calc(100vw - var(--box-padding))
  }

}

@media (max-width: 725px) {

  .container.vertical {
    align-items: center;
    width: 100vw;
  }

  .container.vertical .card {
    transform: unset;
    left: unset;
    right: unset;
    width: 25rem;
    max-width: calc(100% - 3rem);
    margin-top: 2rem;
  }

  .container.vertical .card:nth-of-type(2n) {
    align-self: unset;
  }

  .container.vertical .card .signal {
    left: 50%;
    transform: translate(-50%) !important;
    right: unset;
    top: calc(-1 * var(--signal-dimension));
    z-index: 5;
  }

  .container.vertical .card:nth-of-type(2n) .signal {
    left: unset;
    right: 50%;
    transform: translate(50%) !important;
  }

}

@keyframes pulse {
  0% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 var(--muted);
  }

  70% {
    transform: scale(1);
    box-shadow: 0 0 0 10px transparent;
  }

  100% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 transparent;
  }
}

.card .card-title {
  margin-bottom: 1rem;
}

/** THE ABOVE STATEMENT IS THE CODE YOU NEED IF YOU ARE TAKING THIS TEMPLATE */
/** BETTER WAY: GO TO /src/styles.css */

/** if you are creating your own content, and not necessarily a list, remove these styles */
.card ul {
  margin-top: 1rem;
  padding-left: 1.5rem !important;
}

.card ul li {
  margin-block: .1rem;
}

.end-content {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 1rem;
  font-size: 1.5rem;
}

.end-button {
  font-size: 1.1rem;
}
:root {
  --overlay: #363c4b;
  --gray: #dcf4ff;
  --muted: #dddddd43;
  --gap-from-line: 4rem;
  --line-dimension: 1px;
  --signal-dimension: 1rem;
  --box-padding: var(--gap-from-line);
}

.container {
  display: flex;
  gap: var(--box-padding);
  position: relative;
}

.container.vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  padding-block: var(--box-padding);
  width: calc(100vw - 12rem);
  min-height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
}

.container.horizontal {
  width: calc(100vw - var(--box-padding));
  height: 100vh;
  max-height: 25rem;
  padding: 2rem;
  padding-top: calc(var(--box-padding) + .5rem);
  /* for the signals to appear */
  overflow-x: scroll;
  align-items: flex-start;
  justify-content: flex-start;
}

.container .line {
  background-color: var(--gray);
  position: absolute;
}

.container.vertical .line {
  width: var(--line-dimension);
  height: 100%;
  left: 50%;
  top: 0;
  transform: translate(-50%);
}

.container.horizontal .line {
  display: none;
}

.container.vertical .line::before,
.container.vertical .line::after {
  content: '';
  position: absolute;
  width: var(--signal-dimension);
  height: var(--signal-dimension);
  background-color: var(--gray);
  border-radius: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  top: 0;
}

.container.vertical .line::after {
  top: unset;
  bottom: calc(-1 * var(--signal-dimension));
}

.card {
  background-color: var(--overlay);
  padding: 1.5rem;
  border-radius: .5rem;
  position: relative;
  opacity: 0;
  pointer-events: none;
  transition: 300ms ease-in-out;
  transition-property: opacity, transform;
}

.container.vertical .card {
  width: calc(50% - var(--box-padding));
  transform: translateX(-20%);
}

.container.vertical .card:nth-of-type(2n) {
  transform: translateX(20%);
}

.container.horizontal .card {
  height: 95%;
  min-width: 25rem !important;
  transform: translateY(-10%);
}

/*
for the reverse animation: */
/*
.container.vertical .card {
  transform: translateX(20%);
}

.container.vertical .card:nth-of-type(2n) {
  transform: translateX(-20%);
}

.container.horizontal .card {
  transform: translateY(10%);
}

*/

.card.active {
  opacity: 1;
  pointer-events: all;
  transform: unset !important;
}

.container.vertical .card:nth-of-type(2n) {
  align-self: flex-end;
}

.card .signal {
  height: var(--signal-dimension);
  width: var(--signal-dimension);
  background-color: var(--gray);
  border-radius: 50%;
  position: absolute;
  animation: pulse 1250ms infinite;
}

.container.vertical .card .signal {
  top: 0;
  right: calc(-1 * calc(var(--gap-from-line) + calc(var(--signal-dimension) / 2)));
}

.container.vertical .card:nth-child(2n+1) .signal {
  left: calc(-1 * calc(var(--gap-from-line) + calc(var(--signal-dimension) / 2)));
  right: unset;
}

.container.horizontal .card .signal {
  top: calc(-1 * var(--gap-from-line));
  left: 0rem;
}

.container.horizontal .card::before {
  content: '';
  top: calc(-1 * var(--gap-from-line));
  width: calc(100% + var(--box-padding));
  height: var(--line-dimension);
  position: absolute;
  left: 0;
  transform: translateY(calc(var(--signal-dimension) / 2));
  background-color: var(--gray);
}

.container.horizontal .card:nth-last-of-type(1)::after {
  content: '';
  width: var(--signal-dimension);
  height: var(--signal-dimension);
  position: absolute;
  right: calc(-1 * var(--gap-from-line));
  top: calc(-1 * calc(var(--box-padding) + .5rem));
  border-radius: 50%;
  transform: translateY(.5rem);
  background-color: var(--gray);
}

@media (max-width: 900px) {

  .container.vertical {
    width: calc(100vw - var(--box-padding))
  }

}

@media (max-width: 725px) {

  .container.vertical {
    align-items: center;
    width: 100vw;
  }

  .container.vertical .card {
    transform: unset;
    left: unset;
    right: unset;
    width: 25rem;
    max-width: calc(100% - 3rem);
    margin-top: 2rem;
  }

  .container.vertical .card:nth-of-type(2n) {
    align-self: unset;
  }

  .container.vertical .card .signal {
    left: 50%;
    transform: translate(-50%) !important;
    right: unset;
    top: calc(-1 * var(--signal-dimension));
    z-index: 5;
  }

  .container.vertical .card:nth-of-type(2n) .signal {
    left: unset;
    right: 50%;
    transform: translate(50%) !important;
  }

}


@keyframes pulse {
  0% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 var(--muted);
  }

  70% {
    transform: scale(1);
    box-shadow: 0 0 0 10px transparent;
  }

  100% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 transparent;
  }
}

.card .card-title {
  margin-bottom: 1rem;
}